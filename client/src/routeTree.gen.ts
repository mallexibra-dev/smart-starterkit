/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as appAuthIndexRouteImport } from './routes/(app)/auth/index'
import { Route as appAuthLoginIndexRouteImport } from './routes/(app)/auth/login/index'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const appAuthIndexRoute = appAuthIndexRouteImport.update({
  id: '/(app)/auth/',
  path: '/auth/',
  getParentRoute: () => rootRouteImport,
} as any)
const appAuthLoginIndexRoute = appAuthLoginIndexRouteImport.update({
  id: '/(app)/auth/login/',
  path: '/auth/login/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/auth': typeof appAuthIndexRoute
  '/auth/login': typeof appAuthLoginIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/auth': typeof appAuthIndexRoute
  '/auth/login': typeof appAuthLoginIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(app)/auth/': typeof appAuthIndexRoute
  '/(app)/auth/login/': typeof appAuthLoginIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth' | '/auth/login'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth' | '/auth/login'
  id: '__root__' | '/' | '/(app)/auth/' | '/(app)/auth/login/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  appAuthIndexRoute: typeof appAuthIndexRoute
  appAuthLoginIndexRoute: typeof appAuthLoginIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/auth/': {
      id: '/(app)/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof appAuthIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/auth/login/': {
      id: '/(app)/auth/login/'
      path: '/auth/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof appAuthLoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  appAuthIndexRoute: appAuthIndexRoute,
  appAuthLoginIndexRoute: appAuthLoginIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
